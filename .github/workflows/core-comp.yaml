name: create core components 
env:
  VERSION: "1.28.0"
on: [ workflow_dispatch ]
jobs:
  script:
    # runs-on: ubuntu-latest
    runs-on:
      - self-hosted
      - ckp
    name: clone and create deb
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'kubernetes/kubernetes'
      - name: Installing make
        run: sudo apt install make dpkg -y
        
      - name: exporting env's and building deb's
        run:  |  
          export KUBE_GIT_MAJOR=1
          export KUBE_GIT_COMMIT='855e7c48de7388eb330da0f8d9d2394ee818fb8d'
          export KUBE_GIT_MINOR='28'
          export KUBE_GIT_VERSION='v${{ env.VERSION }}-ckp'
          export KUBE_GIT_TREE_STATE='clean'
          echo v${{ env.VERSION }}-ckp
          # mkdir -p kubeadm_${{ env.VERSION }}-00_amd64/usr/bin 
          # echo kubeadm_${{ env.VERSION }}-00_amd64
          make quick-release
           
      - name: signing the binaries
        shell: bash
        run: | 
          # GPG_TTY=$(tty)
          # export GPG_TTY
          gpg --list-keys --no-tty
          gpg --pinentry-mode loopback --detach-sign _output/dockerized/bin/linux/amd64/kube-apiserver
          gpg --pinentry-mode loopback --detach-sign _output/dockerized/bin/linux/amd64/kube-proxy
          gpg --pinentry-mode loopback --detach-sign _output/dockerized/bin/linux/amd64/kube-controller-manager
          gpg --pinentry-mode loopback --detach-sign _output/dockerized/bin/linux/amd64/kube-scheduler

      - name: creating docker images
        shell: bash
        run: | 
          echo "FROM ubuntu:latest
          COPY _output/dockerized/bin/linux/amd64/kube-apiserver /usr/local/bin/kube-apiserver
          ENTRYPOINT [\"/usr/local/bin/kube-apiserver\"]" >> _output/dockerized/bin/linux/amd64/kube-apiserver-dockerfile
          echo "FROM ubuntu:latest
          COPY _output/dockerized/bin/linux/amd64/kube-proxy /usr/local/bin/kube-proxy
          ENTRYPOINT [\"/usr/local/bin/kube-proxy\"]" >> _output/dockerized/bin/linux/amd64/kube-proxy-dockerfile
          echo "FROM ubuntu:latest
          COPY _output/dockerized/bin/linux/amd64/kube-scheduler /usr/local/bin/kube-scheduler
          ENTRYPOINT [\"/usr/local/bin/kube-scheduler\"]" >> _output/dockerized/bin/linux/amd64/kube-scheduler-dockerfile
          echo "FROM ubuntu:latest
          COPY _output/dockerized/bin/linux/amd64/kube-controller-manager /usr/local/bin/kube-controller-manager
          ENTRYPOINT [\"/usr/local/bin/kube-controller-manager\"]" >> _output/dockerized/bin/linux/amd64/kube-controller-manager-dockerfile
          docker build -f _output/dockerized/bin/linux/amd64/kube-apiserver-dockerfile -t kube-apiserver:v${{ env.VERSION }} .
          docker build -f _output/dockerized/bin/linux/amd64/kube-proxy-dockerfile -t kube-proxy:v${{ env.VERSION }} .
          docker build -f _output/dockerized/bin/linux/amd64/kube-scheduler-dockerfile -t kube-scheduler:v${{ env.VERSION }} .
          docker build -f _output/dockerized/bin/linux/amd64/kube-controller-manager-dockerfile -t kube-controller-manager:v${{ env.VERSION }} .

      - name: pushing images to dockerhub
        shell: bash
        env: 
           docker_pass: ${{secrets.DOCKER_PASS}}
           DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{secrets.DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE}}
        run: |
          docker login -u avnshrai -p $docker_pass
          docker tag kube-apiserver:v${{ env.VERSION }} avnshrai/kube-apiserver:v${{ env.VERSION }}
          docker tag kube-proxy:v${{ env.VERSION }} avnshrai/kube-proxy:v${{ env.VERSION }}
          docker tag kube-scheduler:v${{ env.VERSION }} avnshrai/kube-scheduler:v${{ env.VERSION }}
          docker tag kube-controller-manager:v${{ env.VERSION }} avnshrai/kube-controller-manager:v${{ env.VERSION }}
          export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=$DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE
          docker trust sign avnshrai/kube-apiserver:v${{ env.VERSION }}
          docker trust sign avnshrai/kube-proxy:v${{ env.VERSION }}
          docker trust sign avnshrai/kube-scheduler:v${{ env.VERSION }}
          docker trust sign avnshrai/kube-controller-manager:v${{ env.VERSION }}
          docker push avnshrai/kube-apiserver:v${{ env.VERSION }}
          docker push avnshrai/kube-proxy:v${{ env.VERSION }}
          docker push avnshrai/kube-scheduler:v${{ env.VERSION }}
          docker push avnshrai/kube-controller-manager:v${{ env.VERSION }}
          
          
          
              
